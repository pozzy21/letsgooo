from smtp import send_mail
from aiogram.types import FSInputFile
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram import types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from keyboards.inline import *
from aiogram.utils.keyboard import InlineKeyboardBuilder
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from aiosmtplib import SMTP
import asyncio
from aiogram.utils.formatting import Text, Bold
from bot import delete

time1 = 1800
time2 = 7200
time3 = 86400
mailto = 'pozzy199911@gmail.com'

# subj,to,msg #asyncio.run(send_mail('–¢–µ–º–∞ –ø–∏—Å—å–º–∞','pozzy199911@gmail.com', '<h1>–ü—Ä–∏–≤–µ—Ç</h1>'))

router = Router()


@router.message(F.photo)
async def echo_gif(message: Message):
    await message.reply_photo(message.photo.file_id)


class MakeOrder(StatesGroup):
    start_message = State()
    name = State()
    phone = State()
    start_message_2 = State()
    help_state = State()
    help_state_message = State()
    help_state_phoneme = State()  # –ê –ø–æ—Ç–æ–º —Å–±—Ä–æ—Å —Å—Ç–µ–π—Ç–∞ –∏–ª–∏ —á–∏ —à–æ
    start_message_3 = State()  # –¢—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–≤—Ç–æ
    model_auto = State()
    date_auto = State()
    kuzov_auto = State()
    additional_info = State()
    type_of = State()
    nashi_covriki = State()
    material_of = State()
    color_of = State()
    color_cover = State()
    color_cant = State()
    dopniki = State()
    pyatka = State()
    shield = State()
    final = State()
    wait30 = State()
    wait120 = State()
    wait1440 = State()
    cantik_color = State()
    nigga = State()

# –≠—Ç–æ –µ—â–µ –Ω–µ –∫–æ–Ω–µ—Ü –±–ª–∏–Ω

# @router.message(F.animation)
# async def echo_gif(message: Message):
#     await message.reply_animation(message.animation.file_id)


@router.message(MakeOrder.start_message)
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–æ–µ—Ö–∞–ª–∏",
        callback_data="poehali"),

    )
    await message.answer(
        text="–ü—Ä–∏–≤–µ—Ç! –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ\n–æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–≤—Ä–∏–∫–∏ Eva Standart –≤ —Ç–≤–æ–µ –∞–≤—Ç–æ.\n\n\
–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? \n\n\
–¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç—Ä–µ—Ö –±–ª–æ–∫–∞—Ö:\n\
1. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n\
2. –í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–æ–≤ –∏ –∫–∞–Ω—Ç–∞\n\
3. –£–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n\n\
–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–±–æ—Äüëá\n",
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.start_message)


@router.callback_query(F.data == 'Back_to_start')
async def back2start(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–æ–µ—Ö–∞–ª–∏",
        callback_data="poehali")
    )
    await query.message.answer(
        text="–ü—Ä–∏–≤–µ—Ç! –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ\n –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–≤—Ä–∏–∫–∏ Eva Standart –≤ —Ç–≤–æ–µ –∞–≤—Ç–æ.\n\n\
–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? \n\n\
–¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç—Ä–µ—Ö –±–ª–æ–∫–∞—Ö:\n\n\
1. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n\
2. –í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–æ–≤ –∏ –∫–∞–Ω—Ç–∞\n\
3. –£–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n\n\
–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–±–æ—Äüëá\n",
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.start_message)


@router.message(MakeOrder.start_message)
@router.callback_query(F.data == "poehali")
async def set_name(query: CallbackQuery, state: FSMContext):
    await query.message.edit_text(
        text="–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?"
    )
    await state.set_state(MakeOrder.name)
    current_state = await state.get_state()
#     print(current_state)
#     # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
#     await asyncio.sleep(10)
# # –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
#     if (current_state == await state.get_state()):
#         await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
# –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
# –ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
# –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
# +7(914)5-501-502', reply_markup=wait_kb())
#         await asyncio.sleep(10)
#         print('success1')

#         await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
# –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
# +7(914)5-501-502', reply_markup=wait_kb())
#         await asyncio.sleep(10)
#         print('success2')
#         await query.message.answer(text='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
# –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
# +7(914)5-501-502', reply_markup=wait_kb())


# 4test


@router.message(MakeOrder.name)
async def set_phone(message: Message, state: FSMContext):
    await state.update_data(chosen_name=message.text)
    user_data = await state.get_data()  # –ø–æ —Ö–æ—Ä–æ—à–µ–º—É –ø–æ—Ç–æ–º —É–±—Ä–∞—Ç—å –ø–æ–¥–æ–±–Ω–æ–µ
    await message.answer(
        text="–ü–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏. –î–ª—è —ç—Ç–æ–≥–æ —É–∫–∞–∂–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–≤—è–∑—å —Å –Ω–∞–º–∏üëá"
    )
    print(f"–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –∏–º—è {user_data['chosen_name']}")
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.phone)


@router.message(MakeOrder.phone)
async def start_message(message: Message, state: FSMContext):
    await state.update_data(chosen_phone=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–°—É–ø–µ—Ä! –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ –ø–æ–¥–±–æ—Ä—É",
        callback_data="Super")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="Back_to_start")
    )

    await message.answer_photo(
        photo='AgACAgIAAxkDAAIGJ2Wp6UXRnAvAcUgHJyZHTvuKSAYPAAL-2jEbE81QSaU-QYFbdbafAQADAgADeQADNAQ',
        caption="<b>–£ –Ω–∞—Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–µ—Ç–∫–æ –æ—Ç–ª–∞–∂–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∫–æ–≤—Ä–∏–∫–æ–≤ –ø–æ –±–æ–ª–µ–µ —á–µ–º 1000 –ª–µ–∫–∞–ª –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–æ–∫ –∏ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ</b> \n\n\
–î–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫–æ–≤—Ä–∏–∫–æ–≤ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º EVA-–º–∞—Ç–µ—Ä–∏–∞–ª —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞\n\n\
–°—Ä–æ–∫ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è - 24 —á–∞—Å–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã (–ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã) \n\
\n\
–¶–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –≤ —Å—Ä–µ–¥–Ω–µ–º –∑–∞ —Å–∞–ª–æ–Ω(–±–µ–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞) - –æ—Ç 3400 —Ä—É–±–ª–µ–π \n",
        reply_markup=start_kb()
    )
    user_data = await state.get_data()
    # –ø–æ —Ö–æ—Ä–æ—à–µ–º—É –ø–æ—Ç–æ–º —É–±—Ä–∞—Ç—å –ø–æ–¥–æ–±–Ω–æ–µ
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.start_message_2)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'pricol')
async def deletemsg(query: CallbackQuery, state: FSMContext):
    await query.message.delete()


@router.callback_query(F.data == 'Back')
async def back(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–°—É–ø–µ—Ä! –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ –ø–æ–¥–±–æ—Ä—É",
        callback_data="Super")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="Back_to_start")
    )

    # —Ç—É—Ç –≤—Å—Ç–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIGJ2Wp6UXRnAvAcUgHJyZHTvuKSAYPAAL-2jEbE81QSaU-QYFbdbafAQADAgADeQADNAQ',
        caption="<b>–£ –Ω–∞—Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–µ—Ç–∫–æ –æ—Ç–ª–∞–∂–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∫–æ–≤—Ä–∏–∫–æ–≤ –ø–æ –±–æ–ª–µ–µ —á–µ–º 1000 –ª–µ–∫–∞–ª –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–æ–∫ –∏ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ</b> \n\n\
–î–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫–æ–≤—Ä–∏–∫–æ–≤ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º EVA-–º–∞—Ç–µ—Ä–∏–∞–ª —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞\n\n\
–°—Ä–æ–∫ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è - 24 —á–∞—Å–∞ —Å –æ–º–µ–Ω—Ç–∞ –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã (–ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã) \n\n\
\n\
–¶–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –≤ —Å—Ä–µ–¥–Ω–µ–º –∑–∞ —Å–∞–ª–æ–Ω(–±–µ–∑ –±–∞–≥–∞–∂–Ω–∏–∫–∞) - –æ—Ç 3400 —Ä—É–±–ª–µ–π \n",
        reply_markup=start_kb()
    )
    # –ø–æ —Ö–æ—Ä–æ—à–µ–º—É –ø–æ—Ç–æ–º —É–±—Ä–∞—Ç—å –ø–æ–¥–æ–±–Ω–æ–µ
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.start_message_2)
    current_state = await state.get_state()
    print(current_state)
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="Back")
    )
    await query.message.answer(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'callme')
async def call_me(query: CallbackQuery, state: FSMContext):
    await query.message.edit_text(text='–ü—Ä–∏–Ω—è–ª–∏! –ü–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è ü§ù')
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await send_mail('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –∑–≤–æ–Ω–æ–∫', mailto, f"<h1>–ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞:</h1>\n\
–ò–º—è: {user_data['chosen_name']} \n\
–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['chosen_phone']}")
    await state.set_state(MakeOrder.help_state_phoneme)


@router.callback_query(F.data == 'textme')
async def text_me(query: CallbackQuery, state: FSMContext):
    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å email —Å –ø—Ä–æ—Å—å–±–æ–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞(–í–∞—Ç—Å–∞–ø –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —à–∞—Ä–∏–Ω–≥ —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞?)
    await query.message.edit_text(text='–û—Ç–ª–∏—á–Ω–æ, –º—ã —Å–≤—è–∂–µ–º—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!')
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await send_mail('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –Ω–∞–ø–∏—Å–∞—Ç—å', mailto, f"<h1>–ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞:</h1>\n\
–ò–º—è: {user_data['chosen_name']}\n\
–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['chosen_phone']}")
    await state.set_state(MakeOrder.help_state_message)


@router.callback_query(F.data == 'Super')
async def order(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–£–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–µ–≥–æ –∞–≤—Ç–æ",
        callback_data="auto")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help1")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="Back")
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIQKWXWylBOXJKzxlnUpji4C34vIHFSAAJT3DEbLIuxSsIwRZ7jRk7SAQADAgADdwADNAQ',
        caption='–ß—Ç–æ–±—ã –∫–æ–≤—Ä–∏–∫–∏ –ª–µ–≥–ª–∏ —á–µ—Ç–∫–æ, –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è üëå\n\
\n \
–í —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –Ω–∏–∂–µ —É–∫–∞–∂–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–≤–æ–µ–≥–æ –∞–≤—Ç–æ\n\
–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å"',
        reply_markup=order_1_kb()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.start_message_3)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help1')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_0")
    )
    await query.message.answer(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_0')
async def order_b(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–£–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–µ–≥–æ –∞–≤—Ç–æ",
        callback_data="auto")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help1")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="Back")
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIQKWXWylBOXJKzxlnUpji4C34vIHFSAAJT3DEbLIuxSsIwRZ7jRk7SAQADAgADdwADNAQ',
        caption='–ß—Ç–æ–±—ã –∫–æ–≤—Ä–∏–∫–∏ –ª–µ–≥–ª–∏ —á–µ—Ç–∫–æ, –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è üëå\n\
\n \
–í —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –Ω–∏–∂–µ —É–∫–∞–∂–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–≤–æ–µ–≥–æ –∞–≤—Ç–æ \n \
–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å"',
        reply_markup=order_1_kb()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.start_message_3)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'auto')
@router.message(MakeOrder.start_message_3)
async def order_1(query: CallbackQuery, state: FSMContext):
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIGJWWp6UM28uwOo9kz5jUJjN9EsdMnAAL82jEbE81QSc2wdA-08ssqAQADAgADeQADNAQ',
        caption='–ì–¥–µ –Ω–∞–π—Ç–∏ –≤—Å–µ —Ç–æ—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ?'
    )
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help2")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_0")
    )
    await query.message.answer(
        text='<b>–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ</b>',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.model_auto)


@router.callback_query(F.data == 'help2')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_1")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_1')
async def order_1_b(query: CallbackQuery, state: FSMContext):
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIGJWWp6UM28uwOo9kz5jUJjN9EsdMnAAL82jEbE81QSc2wdA-08ssqAQADAgADeQADNAQ',
        caption='–ì–¥–µ –Ω–∞–π—Ç–∏ –≤—Å–µ —Ç–æ—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ?'
    )
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help2")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_0")
    )
    await query.message.answer(
        text='<b>–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ</b>',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.model_auto)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.model_auto)
async def order_2(message: Message, state: FSMContext):
    await state.update_data(chosen_model=message.text)
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help2")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_1")
    )
    await message.answer_photo(
        photo='AgACAgIAAxkDAAIGImWp6UHlW9YMsuisMJLDzM_ZM_2LAAL52jEbE81QSfQcjrymuf7tAQADAgADeQADNAQ',
        caption="–ß—Ç–æ–±—ã –¥–æ–ª–≥–æ –Ω–µ –∏—Å–∫–∞—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π —Å–≤–∏–¥-–≤–æ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–≥–ª—è–Ω–∏ –≤ –ü–¢–°"
    )
    await message.answer(
        text='<b>–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞</b>',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.date_auto)
    current_state = await state.get_state()
    print(current_state)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help2')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_2")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_2')
async def order_2_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(chosen_model=query.message.text)
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help2")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_1")
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIGImWp6UHlW9YMsuisMJLDzM_ZM_2LAAL52jEbE81QSfQcjrymuf7tAQADAgADeQADNAQ',
        caption="–ß—Ç–æ–±—ã –¥–æ–ª–≥–æ –Ω–µ –∏—Å–∫–∞—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π —Å–≤–∏–¥-–≤–æ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–≥–ª—è–Ω–∏ –≤ –ü–¢–°"
    )
    await query.message.answer(
        text='<b>–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞</b>',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.date_auto)
    current_state = await state.get_state()
    print(current_state)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.date_auto)
async def order_3(message: Message, state: FSMContext):
    await state.update_data(chosen_date=message.text)
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help3")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_2")
    )
    await message.answer_photo(
        photo='AgACAgIAAxkDAAIGI2Wp6UL0G8X7XDFZV_zlJpN0h1JrAAL62jEbE81QSQpAbm4VDCgiAQADAgADeQADNAQ',
        caption="–ü–µ—Ä–µ–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∫—É–∑–æ–≤–∞ –∏–∑ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    )
    await message.answer(
        text='<b>–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–æ–π –∫—É–∑–æ–≤ —É –∞–≤—Ç–æ</b>', reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.kuzov_auto)
    current_state = await state.get_state()
    print(current_state)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help3')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_3")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'back_to_input_3')
async def order_3_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(chosen_date=query.message.text)
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help3")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_2")
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIGI2Wp6UL0G8X7XDFZV_zlJpN0h1JrAAL62jEbE81QSQpAbm4VDCgiAQADAgADeQADNAQ',
        caption="–ü–µ—Ä–µ–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∫—É–∑–æ–≤–∞ –∏–∑ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    )
    await query.message.answer(
        text='<b>–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–æ–π –∫—É–∑–æ–≤ —É –∞–≤—Ç–æ</b>', reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.kuzov_auto)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.kuzov_auto)
async def order_4(message: Message, state: FSMContext):
    await state.update_data(chosen_kuzov=message.text)
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help4")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_3")
    )
    await message.answer(
        text="–ü–æ—Å–ª–µ–¥–Ω–∏–π, –Ω–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π –ø—É–Ω–∫—Ç"
    )
    await message.answer(
        text='1. –ë–µ–Ω–∑–∏–Ω/–¥–∏–∑–µ–ª—å/–≥–∏–±—Ä–∏–¥ \n\
2. –∞–≤—Ç–æ–º–∞—Ç/–º–µ—Ö–∞–Ω–∏–∫–∞ \n\
3. —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–ª—è : –ø—Ä–∞–≤—ã–π/–ª–µ–≤—ã–π \n\n\
–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ', reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.additional_info)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    await asyncio.sleep(1800)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help4')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_4")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_4')
async def order_4_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(chosen_kuzov=query.message.text)
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help4")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_3")
    )
    await query.message.answer(
        text="–ü–æ—Å–ª–µ–¥–Ω–∏–π, –Ω–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π –ø—É–Ω–∫—Ç"
    )
    await query.message.answer(
        text='1. –ë–µ–Ω–∑–∏–Ω/–¥–∏–∑–µ–ª—å/–≥–∏–±—Ä–∏–¥ \n\
2. –∞–≤—Ç–æ–º–∞—Ç/–º–µ—Ö–∞–Ω–∏–∫–∞ \n\
3. —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–ª—è : –ø—Ä–∞–≤—ã–π/–ª–µ–≤—ã–π \n\n\
–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ', reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.additional_info)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    await asyncio.sleep(1800)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.additional_info)
async def order_5(message: Message, state: FSMContext):
    await state.update_data(chosen_info=message.text)
    user_data = await state.get_data()
    print(
        f"–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –∏–º—è {user_data['chosen_name']} –∏ —Ç–µ–ª–µ—Ñ–æ–Ω {user_data['chosen_phone']} –∞ —Ç–∞–∫ –∂–µ {user_data['chosen_model']} {user_data['chosen_kuzov']} {user_data['chosen_date']} {user_data['chosen_info']} "
    )
    await message.answer(
        text='–û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–∞–º–æ–º—É –ø—Ä–∏—è—Ç–Ω–æ–º—É –±–ª–æ–∫—É) –í—ã–±–µ—Ä–∏ —Ç–æ, –∫–∞–∫ –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–≤–æ–∏ –±—É–¥—É—â–∏–µ –∫–æ–≤—Ä–∏–∫–∏'
    )
    await message.answer_photo(
        photo='AgACAgIAAxkDAAILzGW4jxCsUHyu1rYOJgQ02CHGRP1qAAIa1zEbQrjASfX-aIz3PtB7AQADAgADeAADNAQ'
    )
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help5")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_4")
    )
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –Ω–æ–º–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:",
        reply_markup=choice_type_of_cover()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.nashi_covriki)
    current_state = await state.get_state()
    print(current_state)
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help5')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_5")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_5')
async def order_5_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(chosen_info=query.message.text)
    user_data = await state.get_data()
    print(
        f"–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –∏–º—è {user_data['chosen_name']} –∏ —Ç–µ–ª–µ—Ñ–æ–Ω {user_data['chosen_phone']} –∞ —Ç–∞–∫ –∂–µ {user_data['chosen_model']} {user_data['chosen_kuzov']} {user_data['chosen_date']} {user_data['chosen_info']} "
    )
    await query.message.answer(
        text='–û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–∞–º–æ–º—É –ø—Ä–∏—è—Ç–Ω–æ–º—É –±–ª–æ–∫—É) –í—ã–±–µ—Ä–∏ —Ç–æ, –∫–∞–∫ –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–≤–æ–∏ –±—É–¥—É—â–∏–µ –∫–æ–≤—Ä–∏–∫–∏'
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAILzGW4jxCsUHyu1rYOJgQ02CHGRP1qAAIa1zEbQrjASfX-aIz3PtB7AQADAgADeAADNAQ'
    )
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help5")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_4")
    )
    await query.message.answer(
        text="–í—ã–±–µ—Ä–µ—Ç–µ —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –Ω–æ–º–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:",
        reply_markup=choice_type_of_cover()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == '1_type')
async def order_5_type1(query: CallbackQuery, state: FSMContext):
    await state.update_data(chosen_typeof='1')
    await query.message.answer('–î–∞–≤–∞–π —É—Ç–æ—á–Ω–∏–º —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞.\n<b>–û—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∏–∂–µ:</b>\n\n\
1)–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–≤—Ä–∏–∫\n\
2)–ü–µ—Ä–µ–¥–Ω–∏–π –ø–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∏–π\n\
3)–ó–∞–¥–Ω–∏–π –ø—Ä–∞–≤—ã–π\n\
4)–ó–∞–¥–Ω–∏–π –ª–µ–≤—ã–π')
    await state.set_state(MakeOrder.nashi_covriki)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == '4_type')
async def order_5_type4(query: CallbackQuery, state: FSMContext):
    await state.update_data(chosen_typeof='4')
    await query.message.answer('–î–∞–≤–∞–π —É—Ç–æ—á–Ω–∏–º —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞.\n<b>–û—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∏–∂–µ:</b>\n\n\
1)–ü–µ—Ä–≤—ã–π —Ä—è–¥\n\
2)–í—Ç–æ—Ä–æ–π —Ä—è–¥\n\
3)–¢—Ä–µ—Ç–∏–π —Ä—è–¥(–¥–ª—è –∞–≤—Ç–æ–±—É—Å–æ–≤ –∏ –º–∏–Ω–∏–≤—ç–Ω–æ–≤)')
    await state.set_state(MakeOrder.nashi_covriki)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.nashi_covriki)
async def order_6_nashi(message: Message, state: FSMContext):
    await state.update_data(chosen_typeof_2=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞",
        callback_data="choose_type_of_cover")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_5")
    )
    await message.answer_video(video='BAACAgIAAxkDAAIQxmXaI9CaijkP99RJNTzdPFiF6c-NAALmQgACoLHYSnhww4gcrLcgNAQ')
    await message.answer(
        text='–ù–∞—à–∏ –∫–æ–≤—Ä–∏–∫–∏: \n \
‚ñ´Ô∏è–±–µ–∑ –∑–∞–ø–∞—Ö–∞ \n \
‚ñ´Ô∏è–Ω–µ –≤–ø–∏—Ç—ã–≤–∞—é—Ç –≤–ª–∞–≥—É \n \
‚ñ´Ô∏è–ª–æ–∂–∞—Ç—Å—è –±–µ–∑ —â–µ–ª–µ–π –∏ –∑–∞–∑–æ—Ä–æ–≤\n \
‚ñ´Ô∏è–ª–µ–≥–∫–æ –º–æ—é—Ç—Å—è –∏ –æ–±—Å–ª—É–∂–∏–≤–∞—é—Ç—Å—è\n \
‚ñ´Ô∏è—É–¥–µ—Ä–∂–∏–≤–∞—é—Ç –≥—Ä—è–∑—å –∏ –≤–æ–¥—É, –ø–æ—ç—Ç–æ–º—É –æ–±—É–≤—å –æ—Å—Ç–∞–µ—Ç—Å—è —á–∏—Å—Ç–æ–π',
        reply_markup=builder.as_markup()
    )
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == '2_type')
async def order_6_nashi(query: CallbackQuery, state: FSMContext):
    await state.update_data(chosen_typeof='2')
    await state.update_data(chosen_typeof_2='–ù–µ—Ç')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞",
        callback_data="choose_type_of_cover")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_5")
    )
    await query.message.answer_video(video='BAACAgIAAxkDAAIQxmXaI9CaijkP99RJNTzdPFiF6c-NAALmQgACoLHYSnhww4gcrLcgNAQ')
    await query.message.answer(
        text='–ù–∞—à–∏ –∫–æ–≤—Ä–∏–∫–∏: \n \
‚ñ´Ô∏è–±–µ–∑ –∑–∞–ø–∞—Ö–∞ \n \
‚ñ´Ô∏è–Ω–µ –≤–ø–∏—Ç—ã–≤–∞—é—Ç –≤–ª–∞–≥—É \n \
‚ñ´Ô∏è–ª–æ–∂–∞—Ç—Å—è –±–µ–∑ —â–µ–ª–µ–π –∏ –∑–∞–∑–æ—Ä–æ–≤\n \
‚ñ´Ô∏è–ª–µ–≥–∫–æ –º–æ—é—Ç—Å—è –∏ –æ–±—Å–ª—É–∂–∏–≤–∞—é—Ç—Å—è\n \
‚ñ´Ô∏è—É–¥–µ—Ä–∂–∏–≤–∞—é—Ç –≥—Ä—è–∑—å –∏ –≤–æ–¥—É, –ø–æ—ç—Ç–æ–º—É –æ–±—É–≤—å –æ—Å—Ç–∞–µ—Ç—Å—è —á–∏—Å—Ç–æ–π',
        reply_markup=builder.as_markup()
    )
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == '3_type')
async def order_6_nashi(query: CallbackQuery, state: FSMContext):
    await state.update_data(chosen_typeof='3')
    await state.update_data(chosen_typeof_2='–ù–µ—Ç')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞",
        callback_data="choose_type_of_cover")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_5")
    )
    await query.message.answer_video(video='BAACAgIAAxkDAAIQxmXaI9CaijkP99RJNTzdPFiF6c-NAALmQgACoLHYSnhww4gcrLcgNAQ')
    await query.message.answer(
        text='–ù–∞—à–∏ –∫–æ–≤—Ä–∏–∫–∏: \n \
‚ñ´Ô∏è–±–µ–∑ –∑–∞–ø–∞—Ö–∞ \n \
‚ñ´Ô∏è–Ω–µ –≤–ø–∏—Ç—ã–≤–∞—é—Ç –≤–ª–∞–≥—É \n \
‚ñ´Ô∏è–ª–æ–∂–∞—Ç—Å—è –±–µ–∑ —â–µ–ª–µ–π –∏ –∑–∞–∑–æ—Ä–æ–≤\n \
‚ñ´Ô∏è–ª–µ–≥–∫–æ –º–æ—é—Ç—Å—è –∏ –æ–±—Å–ª—É–∂–∏–≤–∞—é—Ç—Å—è\n \
‚ñ´Ô∏è—É–¥–µ—Ä–∂–∏–≤–∞—é—Ç –≥—Ä—è–∑—å –∏ –≤–æ–¥—É, –ø–æ—ç—Ç–æ–º—É –æ–±—É–≤—å –æ—Å—Ç–∞–µ—Ç—Å—è —á–∏—Å—Ç–æ–π',
        reply_markup=builder.as_markup()
    )
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'back_to_order_55')
async def order_6_nashi(query: CallbackQuery, state: FSMContext):
    # await state.update_data(chosen_typeof=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞",
        callback_data="choose_type_of_cover")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_5")
    )
    await query.message.answer_video(video='BAACAgIAAxkDAAIQxmXaI9CaijkP99RJNTzdPFiF6c-NAALmQgACoLHYSnhww4gcrLcgNAQ')

    await query.message.answer(
        text='–ù–∞—à–∏ –∫–æ–≤—Ä–∏–∫–∏: \n \
‚ñ´Ô∏è–±–µ–∑ –∑–∞–ø–∞—Ö–∞ \n \
‚ñ´Ô∏è–Ω–µ –≤–ø–∏—Ç—ã–≤–∞—é—Ç –≤–ª–∞–≥—É \n \
‚ñ´Ô∏è–ª–æ–∂–∞—Ç—Å—è –±–µ–∑ —â–µ–ª–µ–π –∏ –∑–∞–∑–æ—Ä–æ–≤\n \
‚ñ´Ô∏è–ª–µ–≥–∫–æ –º–æ—é—Ç—Å—è –∏ –æ–±—Å–ª—É–∂–∏–≤–∞—é—Ç—Å—è\n \
‚ñ´Ô∏è—É–¥–µ—Ä–∂–∏–≤–∞—é—Ç –≥—Ä—è–∑—å –∏ –≤–æ–¥—É, –ø–æ—ç—Ç–æ–º—É –æ–±—É–≤—å –æ—Å—Ç–∞–µ—Ç—Å—è —á–∏—Å—Ç–æ–π',
        reply_markup=builder.as_markup()
    )
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
# –î–æ–±–∞–≤–∏—Ç—å –≥–∏—Ñ–∫—É

#
#
# —Ç—É—Ç –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä —Ä–æ–º–± –∏–ª–∏ —Å–æ—Ç–∞


# @router.message(MakeOrder.type_of)
@router.callback_query(F.data == 'choose_type_of_cover')
async def order_6(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–†–æ–º–±",
        callback_data="romb")
    )
    builder.add(types.InlineKeyboardButton(
        text="–°–æ—Ç–∞",
        callback_data="sota")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_order_55")
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIRC2Xcu0H3MAO9RP3qcvnd3Gv99MJ6AAIu2DEbk3jpSrdF6pNcVoD0AQADAgADeQADNAQ',
        caption='–í—ã–±–µ—Ä–µ—Ç–µ —Ç–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è: —Ä–æ–º–± –∏–ª–∏ —Å–æ—Ç–∞ \n\n\
–ï—Å—Ç—å –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞? –í —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ - –Ω–µ—Ç. –ü–æ–∫—Ä—ã—Ç–∏–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º–æ–π –∏ –æ–±—ä–µ–º–æ–º —è—á–µ–µ–∫.',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.material_of)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'back_to_input_6')
async def order_6_1(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–†–æ–º–±",
        callback_data="romb")
    )
    builder.add(types.InlineKeyboardButton(
        text="–°–æ—Ç–∞",
        callback_data="sota")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_order_55")
    )
    await query.message.answer_photo(
        photo='AgACAgIAAxkDAAIRC2Xcu0H3MAO9RP3qcvnd3Gv99MJ6AAIu2DEbk3jpSrdF6pNcVoD0AQADAgADeQADNAQ',
        caption='–í—ã–±–µ—Ä–µ—Ç–µ —Ç–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è: —Ä–æ–º–± –∏–ª–∏ —Å–æ—Ç–∞ \n\n\
–ï—Å—Ç—å –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞? –í —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ - –Ω–µ—Ç. –ü–æ–∫—Ä—ã—Ç–∏–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º–æ–π –∏ –æ–±—ä–µ–º–æ–º —è—á–µ–µ–∫.',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.material_of)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


# @router.callback_query(F.data == 'choose_type')
# async def ordery_7_1(query: CallbackQuery, state: FSMContext):
#     await state.set_state(MakeOrder.material_of)

@router.callback_query(F.data == 'romb')
@router.message(MakeOrder.material_of)
async def order_7(query: CallbackQuery, state: FSMContext):
    await state.update_data(romb_sota='–†–æ–º–±')
    builder = InlineKeyboardBuilder()

    builder.add(types.InlineKeyboardButton(
        text="–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞",
        callback_data="choose_color_1")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help7")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    # await query.message.answer(text='*–∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–æ–π —Å —Ü–≤–µ—Ç–∞–º–∏"')
    await query.message.answer(
        text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞ –∫–æ–≤—Ä–∏–∫–∞ –∏ —Ü–≤–µ—Ç–∞ –∫–∞–Ω—Ç–∞\n–¶–≤–µ—Ç –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å ',
        reply_markup=order_7_kb()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.color_cover)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'sota')
@router.message(MakeOrder.material_of)
async def order_7(query: CallbackQuery, state: FSMContext):
    await state.update_data(romb_sota='–°–æ—Ç–∞')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞",
        callback_data="choose_color_1")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help7")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    # await query.message.answer(text='*–∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–æ–π —Å —Ü–≤–µ—Ç–∞–º–∏"')
    await query.message.answer(
        text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞ –∫–æ–≤—Ä–∏–∫–∞ –∏ —Ü–≤–µ—Ç–∞ –∫–∞–Ω—Ç–∞\n–¶–≤–µ—Ç –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å ',
        reply_markup=order_7_kb()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.color_cover)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'choose_color_1')
async def color_cover(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help7")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    user_data = await state.get_data()
    if (user_data['romb_sota'] == '–°–æ—Ç–∞'):
        await query.message.answer_photo(photo='AgACAgIAAxkDAAIREGXcu0ZNgj2DcuTQyKVMiNC4Cb7EAAI02DEbk3jpSuDboOebi7sDAQADAgADdwADNAQ')
    else:
        await query.message.answer_photo(photo='AgACAgIAAxkDAAIRD2Xcu0azF9DPfSSZnkd0ASKrT_WnAAIz2DEbk3jpSlJ9Y4TvxXGjAQADAgADdwADNAQ')
    await query.message.answer(text='–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞ –∏ –Ω–∞–ø–∏—à–µ –µ–≥–æ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ', reply_markup=builder.as_markup())
    await state.set_state(MakeOrder.cantik_color)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.cantik_color)
async def cantik_color(message: Message, state: FSMContext):
    await state.update_data(chosen_color_cover=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help7")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    await message.answer_photo(photo='AgACAgIAAxkDAAIREWXcu0bCdQQggd_zeRr6DRz1a_L-AAI12DEbk3jpShxLhFxm9ZNjAQADAgADdwADNAQ')
    await message.answer(text='–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç –∫–∞–Ω—Ç–∏–∫–∞ –∏ –Ω–∞–ø–∏—à–∏ –µ–≥–æ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ', reply_markup=builder.as_markup())
    await state.set_state(MakeOrder.color_cover)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help7')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


# @router.callback_query(F.data == 'back_to_input_8')
# async def order_7_b(query: CallbackQuery, state: FSMContext):
#     # await state.update_data(chosen_materialof=message.text)
#     builder = InlineKeyboardBuilder()
#     builder.add(types.InlineKeyboardButton(
#         text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
#         callback_data="help7")
#     )
#     builder.add(types.InlineKeyboardButton(
#         text="–ù–∞–∑–∞–¥",
#         callback_data="back_to_input_6")
#     )
#     await query.message.answer(text='*–∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–æ–π —Å —Ü–≤–µ—Ç–∞–º–∏"')
#     await query.message.answer(
#         text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞ –∫–æ–≤—Ä–∏–∫–∞ –∏ —Ü–≤–µ—Ç–∞ –∫–∞–Ω—Ç–∞\n–¶–≤–µ—Ç –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å ',
#         reply_markup=builder.as_markup()
#     )
#     user_data = await state.get_data()
#     print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
#     await state.set_state(MakeOrder.color_cover)


# @router.message(MakeOrder.color_of)
# @router.callback_query(F.data == 'choose_color')
# async def order_7(query: CallbackQuery, state: FSMContext):
#     # await state.update_data(chosen_colorof=message.text)

#     builder = InlineKeyboardBuilder()

#     builder.add(types.InlineKeyboardButton(
#         text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
#         callback_data="help")
#     )
#     builder.add(types.InlineKeyboardButton(
#         text="–ù–∞–∑–∞–¥",
#         callback_data="back_to_input_7")
#     )
#     await query.message.answer_dice()
#     await query.message.edit_text(text='–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞ –∏ –Ω–∞–ø–∏—à–∏ –µ–≥–æ –Ω–æ–º–µ—Ä –≤ –ø–æ–ª–µ –Ω–∏–∂–µ', reply_markup=builder.as_markup)
#     await state.set_state(MakeOrder.color_cover)


@router.message(MakeOrder.color_cover)
async def order_8(message: Message, state: FSMContext):
    await state.update_data(chosen_colorof=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data="continue_dopnik")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help9")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    # await message.answer(text='–í–∏–¥–µ–æ –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –¥–æ–ø–Ω–∏–∫–æ–≤')
    await message.answer(text='–û—Å—Ç–∞–ª–æ—Å—å –µ—â–µ —á—É—Ç—å —á—É—Ç—å! –ó–∞–ø–æ–ª–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∞–∂–Ω—ã–π –±–ª–æ–∫! \n–û—Ç –Ω–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ä–æ–≤–Ω–æ –ª—è–≥—É—Ç –∫–æ–≤—Ä–∏–∫–∏', reply_markup=order_8_kb())
    await state.set_state(MakeOrder.color_cant)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help9')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_9")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_9')
async def order_8_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(chosen_colorof=query.message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data="continue_dopnik")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help9")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_6")
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    # await query.message.answer(text='–í–∏–¥–µ–æ –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –¥–æ–ø–Ω–∏–∫–æ–≤')
    await query.message.answer(text='–û—Å—Ç–∞–ª–æ—Å—å –µ—â–µ —á—É—Ç—å —á—É—Ç—å! –ó–∞–ø–æ–ª–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∞–∂–Ω—ã–π –±–ª–æ–∫! \n–û—Ç –Ω–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ä–æ–≤–Ω–æ –ª—è–≥—É—Ç –∫–æ–≤—Ä–∏–∫–∏', reply_markup=order_8_kb())
    await state.set_state(MakeOrder.color_cant)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.color_cant)
@router.callback_query(F.data == 'continue_dopnik')
async def order_9(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help10")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_9")
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDGXcu0EHgeoXKATDvG7Uv-rEt1HXAAIv2DEbk3jpSv58j4atFm3MAQADAgADeQADNAQ')
    await query.message.answer(text='<b>–£–∫–∞–∂–∏ —Ç–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–≤—Ä–∏–∫–æ–≤</b> \n\n \
–£ –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –µ—Å—Ç—å —Å–≤–æ–∏ –∑–∞–≤–æ–¥—Å–∫–∏–µ —à—Ç–∞—Ç–Ω—ã–µ –∫—Ä–µ–ø–ª–µ–Ω–∏—è:\n\
-–∫—Ä—é—á–∫–∏\n-—à—Ç—ã—Ä–∏\n-–ø–æ–≤–æ—Ä–æ—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã\n\n\
–û–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏, —á—Ç–æ–±—ã –∫–æ–≤—Ä–∏–∫ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –Ω–µ –∑–∞–ø–∞–ª –ø–æ–¥ –ø–µ–¥–∞–ª–∏ –≥–∞–∑–∞ –∏ —Ç–æ—Ä–º–æ–∑–∞', reply_markup=builder.as_markup())
    await state.set_state(MakeOrder.dopniki)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help10')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_10")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_10')
async def order_9_b(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help10")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_9")
    )
    await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDGXcu0EHgeoXKATDvG7Uv-rEt1HXAAIv2DEbk3jpSv58j4atFm3MAQADAgADeQADNAQ')
    await query.message.answer(text='<b>–£–∫–∞–∂–∏ —Ç–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–≤—Ä–∏–∫–æ–≤</b>\n\n\
–£ –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –µ—Å—Ç—å —Å–≤–æ–∏ –∑–∞–≤–æ–¥—Å–∫–∏–µ —à—Ç–∞—Ç–Ω—ã–µ –∫—Ä–µ–ø–ª–µ–Ω–∏—è:\n\
-–∫—Ä—é—á–∫–∏\n-—à—Ç—ã—Ä–∏\n-–ø–æ–≤–æ—Ä–æ—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã\n\n\
–û–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏, —á—Ç–æ–±—ã –∫–æ–≤—Ä–∏–∫ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –Ω–µ –∑–∞–ø–∞–ª –ø–æ–¥ –ø–µ–¥–∞–ª–∏ –≥–∞–∑–∞ –∏ —Ç–æ—Ä–º–æ–∑–∞', reply_markup=builder.as_markup())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.dopniki)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.dopniki)
async def order_10(message: Message, state: FSMContext):
    await state.update_data(type_of_fastening=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help10")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_10")
    )
    await message.answer_photo(photo='AgACAgIAAxkDAAIRDmXcu0VDK-5AJoG7I1zLC39bUFClAAIy2DEbk3jpSsbk8M5dTtLpAQADAgADdwADNAQ')
    await message.answer(text='<b>–í—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–æ–¥–ø—è—Ç–Ω–∏–∫–∞</b> \n\
–ó–∞—á–µ–º –æ–Ω –≤–æ–æ–±—â–µ –Ω—É–∂–µ–Ω? –ù–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –≤–º—è—Ç–∏–Ω –∏ —Ç—Ä–µ—â–∏–Ω, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–≤—Ä–∏–∫–∞', reply_markup=builder.as_markup())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.pyatka)


@router.callback_query(F.data == 'help10')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_12")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_12')
async def order_10_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(type_of_fastening=query.message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help10")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_10")
    )
    await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDmXcu0VDK-5AJoG7I1zLC39bUFClAAIy2DEbk3jpSsbk8M5dTtLpAQADAgADdwADNAQ')
    await query.message.answer(text='<b>–í—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–æ–¥–ø—è—Ç–Ω–∏–∫–∞</b> \n\
–ó–∞—á–µ–º –æ–Ω –≤–æ–æ–±—â–µ –Ω—É–∂–µ–Ω? –ù–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –≤–º—è—Ç–∏–Ω –∏ —Ç—Ä–µ—â–∏–Ω, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–≤—Ä–∏–∫–∞', reply_markup=builder.as_markup())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.pyatka)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.message(MakeOrder.pyatka)
async def order_11(message: Message, state: FSMContext):
    await state.update_data(type_of_pyatka=message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–î–∞",
        callback_data="yes_shield")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–µ—Ç",
        callback_data="no_shield")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_12")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help11")
    )
    await message.answer_video(video='BAACAgIAAxkDAAIQzWXaJEuP6-_RhkJpAqg89KZWqSzlAALrQgACoLHYSn6jgnXCNYJXNAQ')
    await message.answer(text='–ù—É–∂–Ω—ã –ª–∏ –Ω–∞ —Ç–≤–æ–∏ –∫–æ–≤—Ä–∏–∫–∏ —à–∏–ª—å–¥–∏–∫–∏? \n\
-–±—Ä–µ–Ω–¥–∏—Ä—É—é—Ç –∫–æ–≤—Ä–∏–∫–∏\n-—É–ª—É—á—à–∞—é—Ç –≤–∏–∑—É–∞–ª\n\n–°–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –∑–∞—Ü–µ–Ω–∏—Ç—å –∫–∞–∫ —Å–º–æ—Ç—Ä—è—Ç—Å—è üî•', reply_markup=order_11_kb())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.shield)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help11')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_13")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.callback_query(F.data == 'back_to_input_13')
async def order_11_b(query: CallbackQuery, state: FSMContext):
    # await state.update_data(type_of_pyatka=query.message.text)
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–î–∞",
        callback_data="yes_shield")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–µ—Ç",
        callback_data="no_shield")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_12")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help11")
    )
    await query.message.answer_video(video='BAACAgIAAxkDAAIQzWXaJEuP6-_RhkJpAqg89KZWqSzlAALrQgACoLHYSn6jgnXCNYJXNAQ')
    await query.message.answer(text='–ù—É–∂–Ω—ã –ª–∏ –Ω–∞ —Ç–≤–æ–∏ –∫–æ–≤—Ä–∏–∫–∏ —à–∏–ª—å–¥–∏–∫–∏? \n\
-–±—Ä–µ–Ω–¥–∏—Ä—É—é—Ç –∫–æ–≤—Ä–∏–∫–∏\n-—É–ª—É—á—à–∞—é—Ç –≤–∏–∑—É–∞–ª\n\n–°–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –∑–∞—Ü–µ–Ω–∏—Ç—å –∫–∞–∫ —Å–º–æ—Ç—Ä—è—Ç—Å—è üî•', reply_markup=order_11_kb())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.shield)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help11')
async def help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_13")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
\n\
–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.message(MakeOrder.shield)
@router.callback_query(F.data == 'yes_shield')
async def order_12_summary_y(query: CallbackQuery, state: FSMContext):
    await state.update_data(shield='–ù—É–∂–µ–Ω')
    user_data = await state.get_data()
    # await query.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
        callback_data="finally")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help12")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_13")
    )
    await query.message.answer_photo(photo="AgACAgIAAxkDAAIMrmXIrc4rgAqLiVMCIUg3SAW8XWIcAAK_0TEbc31IStnXm_iK3tMTAQADAgADeQADNAQ")

    await query.message.answer(text=f"\
–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —É–∂–µ –ø–æ–¥–±–∏—Ä–∞–µ–º –ª–µ–∫–∞–ª–∞ –ø–æ–¥ —Ç–≤–æ–∏ –∫–æ–≤—Ä–∏–∫–∏üî•\n\
–ü—Ä–æ–≤–µ—Ä—å, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–∫–∞–∑–µ –≤–µ—Ä–Ω—ã, –æ—Å–æ–±–µ–Ω–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω\n\
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å, –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ, –º—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è :)\n\
–í–∞—à–µ –∏–º—è: {user_data['chosen_name']}\n\
–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {user_data['chosen_phone']}\n\
–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å: {user_data['chosen_model']}\n\
–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {user_data['chosen_date']}\n\
–ö—É–∑–æ–≤ –∞–≤—Ç–æ: {user_data['chosen_kuzov']}\n\
–î–æ–ø.–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {user_data['chosen_info']}\n\
–¢–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof']}\n\
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof_2']}\n\
–Ø—á–µ–π–∫–∞: {user_data['romb_sota']}\n\
–¶–≤–µ—Ç –∫–∞–Ω—Ç–∞: {user_data['chosen_colorof']}\n\
–¶–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_color_cover']}\n\
–¢–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è: {user_data['type_of_fastening']}\n\
–¢–∏–ø –ø–æ–¥–ø—è—Ç–Ω–∏–∫–∞: {user_data['type_of_pyatka']}\n\
–®–∏–ª—å–¥–∏–∫: {user_data['shield']}", reply_markup=final_kb())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.final)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help12')
async def order_12_summary_y_help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="yes_shield")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
        \n\
        –ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.message(MakeOrder.shield)
@router.callback_query(F.data == 'no_shield')
async def order_12_summary_n(query: CallbackQuery, state: FSMContext):
    await state.update_data(shield='–ù–µ –Ω—É–∂–µ–Ω')
    # await query.message.delete()
    user_data = await state.get_data()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
        callback_data="finally")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",
        callback_data="help13")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="back_to_input_13")
    )
    await query.message.answer_photo(photo="AgACAgIAAxkDAAIMrmXIrc4rgAqLiVMCIUg3SAW8XWIcAAK_0TEbc31IStnXm_iK3tMTAQADAgADeQADNAQ")
    await query.message.answer(text=f"\
–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —É–∂–µ –ø–æ–¥–±–∏—Ä–∞–µ–º –ª–µ–∫–∞–ª–∞ –ø–æ–¥ —Ç–≤–æ–∏ –∫–æ–≤—Ä–∏–∫–∏üî•\n\
–ü—Ä–æ–≤–µ—Ä—å, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–∫–∞–∑–µ –≤–µ—Ä–Ω—ã, –æ—Å–æ–±–µ–Ω–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω\n\
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å, –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ, –º—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è :)\n\
–í–∞—à–µ –∏–º—è: {user_data['chosen_name']}\n\
–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {user_data['chosen_phone']}\n\
–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å: {user_data['chosen_model']}\n\
–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {user_data['chosen_date']}\n\
–ö—É–∑–æ–≤ –∞–≤—Ç–æ: {user_data['chosen_kuzov']}\n\
–î–æ–ø.–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {user_data['chosen_info']}\n\
–¢–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof']}\n\
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof_2']}\n\
–Ø—á–µ–π–∫–∞: {user_data['romb_sota']}\n\
–¶–≤–µ—Ç –∫–∞–Ω—Ç–∞: {user_data['chosen_colorof']}\n\
–¶–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_color_cover']}\n\
–¢–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è: {user_data['type_of_fastening']}\n\
–¢–∏–ø –ø–æ–¥–ø—è—Ç–Ω–∏–∫–∞: {user_data['type_of_pyatka']}\n\
–®–∏–ª—å–¥–∏–∫: {user_data['shield']}", reply_markup=final_kb())
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.final)
    current_state = await state.get_state()
    await asyncio.sleep(time1)
# –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–ª–∞–≤—ã –ø–µ—Ä–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–æ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—Å–∏–ª
    if (current_state == await state.get_state()):
        msg1 = await query.message.answer(text='–ü—Å—Å—Å... –ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–µ—à—å, –º—ã –æ—Ç—à–∏–ª–∏ 50 –∫–æ–≤—Ä–∏–∫–æ–≤. –¢–æ—Ä–æ–ø–∏—Å—å –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!\n\n\
–ü–æ–∫–∞ —Ç—ã –¥—É–º–∞–ª, —Ç–≤–æ–π —Å–∞–ª–æ–Ω —Å—Ç–∞–ª –≥—Ä—è–∑–Ω–µ–µ\n\
–ø–æ—Ç—Ä–∞—Ç–∏–ª 3000 –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É\n\n\
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–Ω–∏\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time2)
        await delete(msg1.chat.id, msg1.message_id)
    if (current_state == await state.get_state()):
        msg2 = await query.message.answer(text='–¶–≤–µ—Ç —Ç–≤–æ–∏—Ö –∫–æ–≤—Ä–∏–∫–æ–≤ —Å–∫–æ—Ä–æ –º–æ–∂–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ –∫–æ–Ω—Ü–∞.\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())
        await asyncio.sleep(time3)
        await delete(msg2.chat.id, msg2.message_id)
        print('success2')
    if (current_state == await state.get_state()):
        # await delete(msg3.chat.id, msg3.message_id)
        msg3 = await query.message.answer_photo(photo='AgACAgIAAxkDAAIRDWXcu0OCQWytsQGKv6ybxXcOAoIXAAIx2DEbk3jpSqH-kPrsJehKAQADAgADdwADNAQ', caption='–í—Å–µ –ø—Ä–æ—Å—Ç–æ: –º–∞—Å—Ç–µ—Ä–∞ –∑–∞—Ä—è–∂–µ–Ω—ã, –∞ –º–µ–Ω–µ–¥–∂–µ—Ä –∂–¥–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É\n\n\
–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ? –ó–≤–æ–Ω–∏:\n\
+7(914)5-501-502', reply_markup=wait_kb())


@router.callback_query(F.data == 'help13')
async def order12_n_help_message(query: CallbackQuery, state: FSMContext):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ",
        callback_data="callme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ",
        callback_data="textme")
    )
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥",
        callback_data="no_shield")
    )
    await query.message.edit_text(
        text='–í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –±–æ—Çüò¢\n\
        \n\
        –ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (914)5-501-502 –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º',
        reply_markup=builder.as_markup()
    )
    user_data = await state.get_data()
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await state.set_state(MakeOrder.help_state)


@router.message(MakeOrder.final)
@router.callback_query(F.data == 'finally')
async def order_13_final(query: CallbackQuery, state: FSMContext):
    user_data = await state.get_data()
    await query.message.edit_text(text=f"\
–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —É–∂–µ –ø–æ–¥–±–∏—Ä–∞–µ–º –ª–µ–∫–∞–ª–∞ –ø–æ–¥ —Ç–≤–æ–∏ –∫–æ–≤—Ä–∏–∫–∏üî•\n\
–ü—Ä–æ–≤–µ—Ä—å, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–∫–∞–∑–µ –≤–µ—Ä–Ω—ã, –æ—Å–æ–±–µ–Ω–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω\n\
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å, –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ, –º—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è :)\n\
–í–∞—à–µ –∏–º—è: {user_data['chosen_name']}\n\
–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {user_data['chosen_phone']}\n\
–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å: {user_data['chosen_model']}\n\
–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {user_data['chosen_date']}\n\
–ö—É–∑–æ–≤ –∞–≤—Ç–æ: {user_data['chosen_kuzov']}\n\
–î–æ–ø.–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {user_data['chosen_info']}\n\
–¢–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof']}\n\
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof_2']}\n\
–Ø—á–µ–π–∫–∞: {user_data['romb_sota']}\n\
–¶–≤–µ—Ç –∫–∞–Ω—Ç–∞: {user_data['chosen_colorof']}\n\
–¶–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_color_cover']}\n\
–¢–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è: {user_data['type_of_fastening']}\n\
–¢–∏–ø –ø–æ–¥–ø—è—Ç–Ω–∏–∫–∞: {user_data['type_of_pyatka']}\n\
–®–∏–ª—å–¥–∏–∫: {user_data['shield']}")
    print(f'–ö–ª–∏–µ–Ω—Ç –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ:{user_data}')
    await send_mail('–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!', mailto, f"\
–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {user_data['chosen_name']}<br>\
–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['chosen_phone']}<br>\
–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å: {user_data['chosen_model']}<br>\
–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {user_data['chosen_date']}<br>\
–ö—É–∑–æ–≤ –∞–≤—Ç–æ: {user_data['chosen_kuzov']}<br>\
–î–æ–ø.–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {user_data['chosen_info']}<br>\
–¢–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof']}<br>\
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_typeof_2']}<br>\
–Ø—á–µ–π–∫–∞: {user_data['romb_sota']}<br>\
–¶–≤–µ—Ç –∫–∞–Ω—Ç–∞: {user_data['chosen_colorof']}<br>\
–¶–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞: {user_data['chosen_color_cover']}<br>\
–¢–∏–ø –∫—Ä–µ–ø–ª–µ–Ω–∏—è: {user_data['type_of_fastening']}<br>\
–¢–∏–ø –ø–æ–¥–ø—è—Ç–Ω–∏–∫–∞: {user_data['type_of_pyatka']}<br>\
–®–∏–ª—å–¥–∏–∫: {user_data['shield']}")
    await state.clear()
    await query.message.answer(text='<b>–ú—ã —Å–≤—è–∂–µ–º—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞!</b>')


# –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
# –ü–æ–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
# –°–¥–µ–ª–∞—Ç—å —Ä–∞–∑–±–æ—Ä —Å–ª–æ–≤–∞—Ä—è —Å —Ü–≤–µ—Ç–∞–º–∏ –∫–∞–Ω—Ç–∞ –∏ –∫–æ–≤—Ä–∏–∫–∞
# –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è
# –î–æ–±–∞–≤–∏—Ç—å await callback.answer() —Ç–∞–º –≥–¥–µ —á–∞—Å–∏–∫–∏ - –º–± –ª—É—á—à–µ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –≤ —Å–ª–µ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–µ –ª–æ–≤–∏—Ç—å –∏ —Ä–µ–¥–∞—á–∏—Ç—å\—É–¥–∞–ª—è—Ç—å?


# –í–∏–∑—É–∞–ª
# –ù–∞—á–∞—Ç—å –¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π —Ç–µ–∫—Å—Ç, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç—Å—Ç—É–ø—ã
# –ù–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏
# –ö—Ä–∞—Å–∏–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞


# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Ñ–∏–ª—å—Ç—Ä—ã?
# –ó–∞–≤–µ—Ä–Ω—É—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
# –î–µ–ø–ª–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ VPS
